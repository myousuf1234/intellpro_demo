version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: document_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-document_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  app:
    build: .
    container_name: document_pipeline
    depends_on:
      db:
        condition: service_healthy
    environment:
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_CHANNEL: ${SLACK_CHANNEL:-research}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-document_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PDF_STORAGE_PATH: /app/extracted_pdfs
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      MAX_WORKERS: ${MAX_WORKERS:-4}
    volumes:
      - ./extracted_pdfs:/app/extracted_pdfs
      - ./logs:/app/logs
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:

